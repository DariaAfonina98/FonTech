<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FonTech2.Api</name>
    </assembly>
    <members>
        <member name="M:FonTech2.Api.Controllers.AuthController.Register(FonTech2.Domain.Dto.User.RegisterUserDto)">
            <summary>
            регистрация пользователя
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:FonTech2.Api.Controllers.AuthController.Login(FonTech2.Domain.Dto.User.LoginUserDto)">
            <summary>
            логин пользователя
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:FonTech2.Api.Controllers.ReportController.GetUserReports(System.Int64)">
             <summary>
              Получение всех отчетов пользователя
             </summary>
             <param name="userId"></param>
             <remarks>
              Get user reports
            
                GET
             
                  {
             
                  "userId": 1
             
                  } 
             </remarks>
             <response code="200">если отчет создался</response>
        </member>
        <member name="M:FonTech2.Api.Controllers.ReportController.GetReport(System.Int64)">
             <summary>
              Получение отчета по идентификатору
             </summary>
             <param name="id"></param>
             <remarks>
             Request for get report
            
                GET
             
                 {
             
                  "id": 1
             
                 }
             </remarks>
             <response code="200">если отчет создался</response>
        </member>
        <member name="M:FonTech2.Api.Controllers.ReportController.Delete(System.Int64)">
             <summary>
              Удаление отчета
             </summary>
             <param name="id"></param>
             <remarks>
             Request for delete report
            
               DELETE
             
                 {
             
                 "id": 1
             
                 }
             </remarks>
             <response code="200">если отчет удалился</response>
             <response code="400">если отчет не был удален</response>
        </member>
        <member name="M:FonTech2.Api.Controllers.ReportController.Create(FonTech2.Domain.Dto.Report.CreateReportDto)">
             <summary>
              Создание отчета
             </summary>
             <param name="dto"></param>
             <remarks>
             Request for create report
             
            POST
             
                {
             
                "name": "report#1",
             
                "description": "test report",
             
                "userId": 1
             
                }
             
             </remarks>
             <response code="200">если отчет создался</response>
             <response code="400">если отчет не был создан</response>
        </member>
        <member name="M:FonTech2.Api.Controllers.ReportController.Update(FonTech2.Domain.Dto.Report.UpdateReportDto)">
             <summary>
              Обновление отчета
             </summary>
             <param name="dto"></param>
             <remarks>
             Request for update report
            
               PUT
             
                 {
             
                  "id": 1,
             
                  "name": "Report #2",
             
                  "description": "Test report #2"
             
                 }
             </remarks>
             <response code="200">если отчет обновился</response>
             <response code="400">если отчет не был обновлен</response>
        </member>
        <member name="M:FonTech2.Api.Controllers.RoleController.Create(FonTech2.Domain.Dto.Role.RoleDto)">
             <summary>
              Создание роли
             </summary>
             <param name="dto"></param>
             <remarks>
             Request for create report
             
            POST
             
                {
             
                "name": "Admin",
             
                }
             
             </remarks>
             <response code="200">если роль создалась</response>
             <response code="400">если роль не создалась</response>
        </member>
        <member name="M:FonTech2.Api.Controllers.RoleController.Delete(System.Int64)">
             <summary>
              Удаление роли с указанием идентификатора 
             </summary>
             <param name="id"></param>
             <remarks>
             Request for delete report
            
               DELETE
             
                 {
             
                 "id": 1
             
                 }
             </remarks>
             <response code="200">если роль удалилась</response>
             <response code="400">если роль не была удалена</response>
        </member>
        <member name="M:FonTech2.Api.Controllers.RoleController.Update(FonTech2.Domain.Dto.Role.RoleDto)">
             <summary>
              Обновление роли с указанием основных свойств
             </summary>
             <param name="dto"></param>
             <remarks>
             Request for update report
            
               PUT
             
                 {
             
                  "id": 1,
             
                  "name": "Admin"
             
                 }
             </remarks>
             <response code="200">если роль обновилась</response>
             <response code="400">если роль не была обновлена</response>
        </member>
        <member name="M:FonTech2.Api.Startup.AddAuthenticationAndAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Подключение авторизации и аутентификации
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:FonTech2.Api.Startup.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Подключение Swagger
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
